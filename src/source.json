[
{ "title": "タイトル", "class": "index", "source": <<EOS
%h2 HTML と CSS の話
#sub-title
  .date 2011.10.21
  .author
    %a{href:'http://twitter.com/#!/onjiro_mohyahya'} @onjiro_mohyahya
EOS
},

{ "title": "目次", "source": <<EOS
%ol
  %li なぜ CSS の話？
  %li CSS の概要
  %li block と inline を操る！
  %li 段組をする！
  %li まとめ
EOS 
},
{ "title": "なぜ CSS の話？", "source": <<EOS
%p CSS は・・・
%ul
  %li WEB 系の開発では必須の技術！
  %li ポイントを抑えると自由にレイアウトできる！
  %li ちょっとテクニック使えるとカッコイイ！
EOS
},
{ "title": "うへへ", "class":"eyecatch", "source": "%h2 CSS いいよー"},
{ "title": "but", "class":"eyecatch", "source": "%h2 だけど"},

{ "title": "CSS の概要", "class": "eyecatch", "source": "%h2 CSS って何だ？" },
{ "title": "CSS って何だ？", "source": <<EOS
%p 最近の流れってこんな感じ
%dl
  %dt HTML
  %dd 文書構造
  %dt CSS
  %dd 見た目
%p 作業の分離、HTML構造がシンプルになるとかのメリット
%p ↓とか見たらどうでしょう？
%blockquote
  %p
    %a{href: 'http://adp.daa.jp/web.html', target: '_blank'}
      ADP: ウェブデザイン／CSS
      %span.sitename Alternative Design Blog
EOS
},
{ "title": "CSS の基本", "source": <<EOS
%p セレクタで指定した要素に見た目を設定する
%dl
  %dt ID
  %dd '#id名' で指定、文書内で一意になる
  %dt クラス
  %dd '.class名' で指定、複数の要素に指定可能
  %dt 要素
  %dd '要素名' で指定する。ex.) div とか
%p さらにこれらを複数組み合わせて指定が可能。
%p 詳しくはぐぐってください。
EOS
},


{ "title": "ポイント1", "class": "eyecatch", "source": "%h2 block と inline を操る！" },
{ "title": "block と inline", "source": <<EOS
%p HTML にはブロック要素とインライン要素がある
%p タグ毎に決まっているが、display 属性で上書き可能
%dl
  %dt ブロック要素
  %dd 要素は上から下方向に配置される
  %dt インライン要素
  %dd 前後の要素は改行されない場合、左から右に配置される
%p ただし、インライン要素では width, height, 縦方向の margin, padding 属性は適用されない
EOS
},
{ "title": "実例！", "class":"eyecatch", "source": "%h2 どういうこと？"},
{ "title": "横に並ぶリスト", "source": <<EOS
%p ブロック要素とインライン要素での代表的なテクニック
.example
  li { display: block;} （デフォルト）
  %ul
    %li HOME
    %li BLOG
    %li LINK
.example
  li { display: inline; list-style-type: none;}
  %ul
    %li{style:"display: inline; list-style-type: none;"} HOME
    %li{style:"display: inline; list-style-type: none;"} BLOG
    %li{style:"display: inline; list-style-type: none;"} LINK
EOS
},
{ "title": "one more!!", "class": "supplement", "source": <<EOS
%h2 inline-block
%p 下記の属性が有効なインライン要素
%ul
  %li width
  %li height
  %li 縦方向の margin
  %li 縦方向の padding
%blockquote
  %p
    %a{href:'http://h2ham.seesaa.net/article/116990578.html', target:'_blank'}
      display:inline-blockがけっこう便利。だけど…
      %span.sitename THE HAM MEDIA BLOG
EOS
},


{ "title": "ポイント2", "class": "eyecatch", "source": "%h2 段組みをする！" },
{ "title": "CSS で段組み！", "source": <<EOS
%p 段組みはレイアウトを行う上での必須のテクニック！
%p 基本の2段組みレイアウトの方法を紹介
%ul
  %li float を使う方法
  %li position を使う方法
EOS
},
{ "title": "float を使う方法", "source": <<EOS
%p float を指定した場合の配置を利用
.example
  %p{style:'margin-bottom: 8px;'}
    親要素
  .nav{style:'position: relative;float: left; width: 40%; background-color: #ffa; padding-bottom: 5em; margin-bottom: 8px;'}
    先の要素で float を指定
    %br
    'float: left'
  .main{style:'position: relative; margin-left: 45%; width: 50%; padding-bottom: 3em; margin-bottom: 8px'}
    後の要素は float を指定しない
    %br
    重ならない様に幅を指定
  .clear{style:'clear:both; background-color: #faf'}
    clear 属性を指定して float 解除
EOS
},
{ "title": "position を使う方法", "source": <<EOS
%p position 属性を使用した段組みのテクニック
%p
.example{style:'position: relative'}
  親要素 - position: relative
  .div{style:'width: 60%; margin-top: 1em; padding-bottom: 3em;'}
    position: static
    %br
    右側の要素と重ならないように幅を指定
  .div{style:'width: 30%; margin-top: 1em; position: absolute; top: 1.5em; right: 0.5em; background-color: #ffa;'}
    position: absolute
    %br
    top, right を指定
EOS
},
{ "title": "通常(static)の場合の配置", "source": <<EOS
%p
  static が指定された block 要素は次の挙動
  %ul
    %li 開始位置 + margin の位置に配置
    %li 大きさは border + padding + width(height)
    %li 子要素は 配置位置 + border + padding から開始
.example
  子要素の開始位置から margin 分離れた箇所に border が配置される。
  %div{style:'width: 90%; margin: 1em; padding-bottom: 3em;'}
    padding した位置に子要素が配置される
EOS
},
{ "title": "relative, absolute の場合の配置", "source": <<EOS
%p
  margin, padding に加えて、top などの指定が可能
  %dl
    %dt relative
    %dd 相対配置。static の場合基準位置からの位置を指定
    %dt absolute
    %dd 絶対配置。基準となるボックスがの左上からの位置で指定。基準は static 以外の親要素。なければウィンドウ
.example
  親ボックス - position: static
  %div{style:'position: relative; top: 30px; padding-bottom: 4em;'}
    relative: padding を加味した位置に子要素が配置される
  %div{style:'position: absolute; bottom: 40px; right: 50px; padding-bottom: 3em;'}
    absolute: 開始位置をウインドウの左上として配置
EOS
},
{ "title": "one more!!", "class": "supplement", "source": <<EOS
%h2 ネガティブマージン
%p margin にマイナスの値を設定するテクニック
%blockquote
  %p
    %a{href:'http://coliss.com/articles/build-websites/operation/css/css-using-negative-margins.html', target:'_blank'}
      [CSS]ネガティブマージンの理解を深め、活用するテクニック集
      %span.sitename コリス
%h2 display: table-cell
%p テーブル的な配置を可能にする
%blockquote
  %p
    %a{href:'http://ib-ennoshita.jp/2008/04/24-ogawa.html', target:'_blank'}
      CSS「display: table」と「display: table-cell」で出来ること
      %span.sitename ibnet BLOG
EOS
},


{ "title": "まとめ", "class": "eyecatch", "source": "%h2 まとめ" },
{ "title": "まとめ", "class":"last" ,"source": <<EOS
%p CSS はまず以下を押さえるといいかも！
%ul
  %li display 属性
  %li float 属性
  %li position 属性
%p あとは擬似セレクタも使えるとかなり色々できるヨ！
EOS
},
{ "title": "おまけ", "source": <<EOS
.github
  %p 当資料は github でソースコード公開してます。
  %blockquote
    %p
      %a{href: 'https://github.com/onjiro/presentation-css', target: '_blank'} https://github.com/onjiro/presentation-css
EOS
}

]
