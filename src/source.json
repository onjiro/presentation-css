[
{ "title": "タイトル", "class": "index", "source": <<EOS
%h2 HTML と CSS の話
#sub-title
  .date 2011.10.21
  .author 第２システム部 永沼 智比呂
EOS
},

{ "title": "目次", "source": <<EOS
%ol
  %li 発表概要
  %li CSS の概要
  %li block と inline を操る！
  %li 段組をする！
  %li 擬似セレクタで一歩上へ
  %li まとめ
EOS 
},
{ "title": "なぜ CSS？", "source": <<EOS
%p CSS はいくつかのポイントを抑えると自由にレイアウトできる！
EOS
},

{ "title": "CSS の概要", "class": "eyecatch", "source": "%h2 CSS って何だ？" },
{ "title": "CSS って何だ？", "source": <<EOS
%p HTML は文書構造のみ、CSS で見た目を設定。というのが今の流れ。
%p
  利点は作業の分離、メディアによって表示方法を変更可能
  HTML構造がシンプルになるとか？・・・調べる
EOS
},
{ "title": "CSS の基本", "source": <<EOS
%p CSS セレクタで指定した要素に見た目を設定する
%p TODO セレクタ、属性、代表的なセレクタ、属性
EOS
},


{ "title": "ポイント1", "class": "eyecatch", "source": "%h2 block と inline を操る！" },
{ "title": "block と inline", "source": <<EOS
%p display 要素を自在に使えるようになろう！
EOS
},
{ "title": "横に並ぶリスト", "source": <<EOS
%p ブロック要素とインライン要素での代表的なテクニックを紹介
EOS
},


{ "title": "ポイント2", "class": "eyecatch", "source": "%h2 段組みをする！" },
{ "title": "CSS で段組み！", "source": <<EOS
%p 段組みはレイアウトを行う上での必須のテクニック！
%p 基本の2段組みレイアウトの方法を紹介
%ul
  %li flow レイアウト
  %li position レイアウト
EOS
},
{ "title": "float を使う方法", "source": <<EOS
%p flow 属性を使用した段組みのテクニック
%p flow を指定した後の要素が回り込むことを利用する
EOS
},
{ "title": "position を使う方法", "source": <<EOS
%p position 属性を使用した段組みのテクニック
%dl
  %dt relative
  %dd 指定なし（static）位置を基準に相対配置
  %dt absolute
  %dd 絶対位置への配置
  %dt fixed
  %dd 絶対位置への配置（スクロールを無視する）
%p
.example{style:'position: relative'}
  親要素 - position: relative
  .div{style:'width: 60%; margin-top: 1em; padding-bottom: 3em;'}
    position: static - 右側の要素と重ならないように幅を調整
  .div{style:'width: 30%; margin-top: 1em; position: absolute; top: 1.5em; right: 0.5em;'}
    position: absolute - top, right を指定
EOS
},
{ "title": "通常(static)の場合の配置", "source": <<EOS
%p
  static が指定された block 要素は次の挙動
  %ul
    %li 開始位置 + margin の位置に配置
    %li 大きさは border + padding + width(height)
    %li 子要素は 配置位置 + border + padding から開始
.example
  子要素の開始位置から margin 分離れた箇所に border が配置される。
  %div{style:'width: 90%; margin: 1em; padding-bottom: 3em;'}
    padding した位置に子要素が配置される
EOS
},
{ "title": "relative, absolute の場合の配置", "source": <<EOS
%p
  margin, padding に加えて、top などの指定が可能
  %dl
    %dt relative
    %dd 相対配置。static の場合基準位置からの位置を指定
    %dt absolute
    %dd 絶対配置。親ボックスが static の場合、ウインドウの左上からの位置で指定。static 以外では親ボックスの最初の子要素の開始位置で指定
.example
  親ボックス - position: static
  %div{style:'position: relative; top: 30px; padding-bottom: 4em;'}
    relative: padding を加味した位置に子要素が配置される
  %div{style:'position: absolute; bottom: 40px; right: 50px; padding-bottom: 3em;'}
    absolute: 開始位置をウインドウの左上として配置
EOS
},
{ "title": "+1!", "class": "supplement", "source": <<EOS
%h2 ネガティブマージン
%blockquote
  %p
    %a{href:'http://coliss.com/articles/build-websites/operation/css/css-using-negative-margins.html'}
      [CSS]ネガティブマージンの理解を深め、活用するテクニック集 - コリス
EOS
},


{ "title": "ポイント3", "class": "eyecatch", "source": "%h2 擬似セレクタで一歩上へ！" },
{ "title": "擬似セレクタを使う！", "source": <<EOS
%p 複雑なことをするときには擬似セレクタが欠かせない！
%p 擬似セレクタを使った代表的なテクニックを紹介
EOS
},
{ "title": "hover", "source": <<EOS
%p カーソルを要素に重ねた時の見た目を指定
EOS
},
{ "title": "*Child", "source": <<EOS
%p firstChild, n-thChild などで任意の順序の要素を指定
EOS
},
{ "title": "before, after", "source": <<EOS
%p before, after で要素にコンテンツを追加する
EOS
},


{ "title": "まとめ", "class": "eyecatch", "source": "%h2 まとめ" },
{ "title": "まとめ", "class":"last" ,"source": <<EOS
%p CSS は以下を押さえると大分自由になる！
%ul
  %li display 属性
  %li flow 属性
  %li position 属性
  %li 擬似セレクタ
EOS
}
]
